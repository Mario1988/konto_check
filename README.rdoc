= KontoCheck

Check whether a certain bic/account-no-combination can possibly be valid for a German bank.

It uses the C library konto_check (see http://sourceforge.net/projects/kontocheck/) by
Michael Plugge.

== example

<pre>
>> require "konto_check"
true

>> KontoCheck::load_bank_data("./BLZ_20100308.txt")
true

>> KontoCheck::konto_check("52001","52250030")
true

>> KontoCheck::bank_name("52250030")
"hahaa!"
(Wutt??? Doesn't work yet. Obviously)
</pre>

== Short 'Documentation'

=== KontoCheck::konto_check(<kto>, <blz>)

check whether the given account number kto kann possibly be
a valid number of the bank with the bic blz.

=== KontoCheck::load_bank_data(<datafile>)

initialize the underlying C library konto_check with the bank
information from datafile.
Internally, this file is first transformed into a LUT file and then
read.

For the datafile, use the file 'blz_yyyymmdd.txt' from
http://www.bundesbank.de/zahlungsverkehr/zahlungsverkehr_bankleitzahlen_download.php
These files are updated every three months, so be sure to
replace them regularly.

=== KontoCheck::bank_name(<blz>)

gives the name of the bank as a string or nil
if no bank with the given name exists.

== License

Since the original http://www.informatik.hs-mannheim.de/konto_check/ is
licensed under LGPL, so is this module.
